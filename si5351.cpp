#include <cstdint>
#include <cstdio>
#include <stdexcept>
#include "i2c_dev.h"
#include "si5351.h"

#include "Si5351A-RevB-Registers.h"


Si5351::Si5351(I2cDev& i2c) :
    _i2c(i2c)
{
    // Figure 10 in Data Sheet

    uint8_t r3 = 0xff;
    write_reg(3, r3);

    r3 = read_reg(3);
    if ((r3 & 0x07) != 0x07) {
        printf("Si5351::Si5351: r3=0x%02x\n", int(r3));
        throw std::runtime_error("Si5351::Si5351: r3 error 1");
    }

    for (int r = 16; r <= 23; r++)
        write_reg(r, 0x80);

    // this is the configuration generated by ClockBuilder Pro
    for (int i = 0; i < SI5351A_REVB_REG_CONFIG_NUM_REGS; i++)
        write_reg(si5351a_revb_registers[i].address,
                  si5351a_revb_registers[i].value);

    write_reg(177, read_reg(177) | 0xa0);

    r3 &= ~0x07;
    write_reg(3, r3);
    r3 = read_reg(3);
    if ((r3 & 0x07) != 0x00) {
        throw std::runtime_error("Si5351::Si5351: r3 error 2");
    }
}


Si5351::~Si5351()
{
}


void Si5351::show_reg(int n, bool zeros)
{
    uint8_t r = read_reg(n);
    if (r != 0 || zeros)
        printf("r%d=0x%02x\n", n, int(r));
}


void Si5351::show(bool zeros)
{
    struct {
        int start;
        int stop;
    } regs[] = {
        {0, 4}, {9, 10}, {15, 93}, {149, 171}, {177, 178}, {183, 184}, {187, 188}
    };
    const int regs_cnt = sizeof(regs) / sizeof(regs[0]);

    for (int i = 0; i < regs_cnt; i++)
        for (int j = regs[i].start; j < regs[i].stop; j++)
            show_reg(j, zeros);
}
